%
%
%       !!! WRITE DOCUMENTATION
% 
% Author: Richard Somervail, Istituto Italiano di Tecnologia, 2022
%           www.iannettilab.net
% History:
% 11/07/2022 ver 0.1. Created
% 
%%  

function EEG = pop_dusk2dawn_evalResults(EEG)

%% get info about EEG data
if ~isfield(EEG.etc, 'dusk2dawn')
    errordlg2('Please use the master function (pop_dusk2dawn) or core function (1) first to clean the data before running this function' ...
        ,'Error: Dataset has not been cleaned with Dusk2dawn');
end
cfg = EEG.etc.dusk2dawn.cfg;
pars = cfg.pars; npars = length(pars.labels);

%%% Define GUI elements %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% title / help text
if npars == 1, plural = ''; else, plural = 's'; end
if npars == 0, npars_str = 'no'; else, npars_str = num2str(npars); end
    titleText{1} = ['This dataset has been cleaned using Dusk2Dawn ' sprintf( 'with %s varied parameter%s.', npars_str, plural)];
    titleText{2} = 'You can now explore the effects of ASR on your data using the functions below.';
if npars > 0
    titleText{3} = 'Finally, click "OK" to apply ASR with the selected parameters (you can always return to this screen later)';
else
    titleText{3} = 'Finally, click "OK" to apply ASR (you can always return to this screen later)';
end
geo_titleText = { ...
    1 ...
    1 ...
    1 ...
    1 ...
};
ui_titleText = { ...
    { 'Style', 'text', 'string', titleText{1}, 'fontweight', 'bold' } ...
    {} ...
    { 'Style', 'text', 'string', titleText{2}, 'fontweight', 'bold' } ...
    { 'Style', 'text', 'string', titleText{3}, 'fontweight', 'bold' } ...
}; 

%% function call buttons
geo_funCalls = { ...
    [1 3] ...
    1 ...
    [1 3] ...
};
ui_funCalls = { ...
    { 'Style','pushbutton', 'string','Plot Data', 'callback','pop_d2d_vis_artifacts(EEG)' } ... % ! will need to give it chanlist and such
        { 'Style', 'text', 'string', ' --> Visualise data to compare before/after ASR using vis_artifacts() function' } ...
    {} ...
    { 'Style','pushbutton', 'string','Plot Validation Metrics', 'callback','pop_d2d_plotValidation(EEG)' } ...
        { 'Style', 'text', 'string', ' --> Plot various metrics which quantify the effects of ASR on your data' } ...
};

%% runInfo (i.e. info from CFG about each parameter/setting, whether varied or constant)
%!!! title in italics, everything slightly indented, 2 columns: parameter and value (can be 'varied')



%% Define GUI elements - choose pars to apply ASR with if any were varied
if npars > 0
    ui_choosePars(1) = {{ 'Style', 'text', 'string', 'Choose which ASR parameters to apply to your data:', 'fontweight', 'bold' }};
    geo_choosePars = {1};
    for p = 1:3
        if npars >= p
            parvals = d2d_getParList(pars.values{p});
            ui_choosePars = [  ui_choosePars ...
                            {{ 'Style', 'text', 'string', ['parameter ' num2str(p) ': ' pars.labels{p}], 'fontweight', 'bold', 'HorizontalAlignment','right' }} ...
                                {{ 'Style', 'popupmenu', 'string', parvals, 'value', 1,  'tag' ['sel_par_' num2str(p)]  }} ...
                                { {} } ...
                            { {} } ...
            ];
            geo_choosePars = [ geo_choosePars, {[1 1 1]}, {1} ];
        end
    end
else
    geo_choosePars = [];
    ui_choosePars  = [];
end

%% build GUI
space = { {} };

% assemble final UI list & geometry
geometry = [       ...
    1 ...
    geo_titleText  ...
    1 ...
    geo_funCalls   ...
    1 ...
    geo_choosePars ...
    1 ...
];
uilist = [         ...
    space          ...
    ui_titleText   ...
    space          ...
    ui_funCalls    ...
    space          ...
    ui_choosePars  ...
    space          ...
];

%% create GUI
[ tmp1 tmp2 strhalt cfg ] = inputgui( geometry, uilist, ...
   'pophelp(''pop_dusk2dawn_evaluateResults'');', 'Evaluate the results of cleaning -- pop_dusk2dawn_evaluateResults()');
 
%% call apply ASR cleaning on OK click
EEG = d2d_applyCleaning(EEG,cfg);


end